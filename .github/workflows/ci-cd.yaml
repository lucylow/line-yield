name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18.x'
  FOUNDRY_VERSION: 'nightly'
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Setup Foundry
      uses: foundry-rs/foundry-toolchain@v1
      with:
        version: ${{ env.FOUNDRY_VERSION }}

    - name: Install dependencies
      run: npm ci

    - name: Run unit tests
      run: npm test

    - name: Run security analysis
      run: |
        npm run slither
        npm run mythril

    - name: Generate test coverage
      run: npm run coverage

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.json
        flags: unittests

    - name: Notify Slack on failure
      if: failure()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#ci-cd-alerts'
        webhook_url: ${{ env.SLACK_WEBHOOK }}

  deploy:
    name: Deploy to Environment
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    environment:
      name: production
      url: https://app.kaia-yield.xyz

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Deploy to production
      run: npm run deploy:prod
      env:
        KAIROS_RPC_URL: ${{ secrets.KAIROS_RPC_URL }}
        DEPLOYER_PRIVATE_KEY: ${{ secrets.DEPLOYER_PRIVATE_KEY }}
        ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}

    - name: Run post-deployment tests
      run: npm run test:prod

    - name: Notify Slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#deployments'
        webhook_url: ${{ env.SLACK_WEBHOOK }}
